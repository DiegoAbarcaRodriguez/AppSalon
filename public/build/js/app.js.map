{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","id","nombre","fecha","hora","servicios","iniciarApp","mostrarSeccion","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","idCliente","nombreCliente","seleccionarFecha","seleccionarHora","mostrarResumen","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","boton","addEventListener","e","parseInt","target","dataset","async","url","resultado","fetch","json","mostrarServicios","error","console","log","servicio","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","appendChild","onclick","seleccionarServicio","divServicio","some","agregado","filter","value","dia","Date","getUTCDay","includes","mostrarAlerta","split","mensaje","tipo","elemento","desaparece","alertaPrevia","alerta","setTimeout","resumen","firstChild","removeChild","Object","values","length","headingServicios","contenedorServicio","textoServicio","innerHTML","headingCita","fechaObj","mes","getMonth","getDate","year","getFullYear","fechaFormateada","UTC","toLocaleDateString","weekday","month","day","fechaCliente","horaCliente","botonReservar","reservarCita","datos","FormData","idServicios","map","append","respuesta","method","body","Swal","fire","icon","title","text","button","then","window","location","reload"],"mappings":"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","file":"app.js","sourcesContent":["let paso=1; //Variable global que será rescrita al dar click en un tab de la navegación\r\nconst pasoInicial=1;//Valor minimo que puede tomar la variable paso\r\nconst pasoFinal=3;//Valor máximo que puede tomar la variable paso\r\n\r\nconst cita={ //Objeto que almacena\r\n    id:'',\r\n    nombre:'',\r\n    fecha:'',\r\n    hora:'',\r\n    servicios:[]\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded',function(){\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarSeccion(); //Oculta o muestra sección inicialmente, antes de que se de click en algún Tab(por default paso=1)\r\n    tabs(); // Cambia la sección cuando se presionen los Tabs\r\n    botonesPaginador(); //Agrega o quita los botones del paginador\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n\r\n    consultarAPI();//Consulta la tabla de servicios en MYSQL, denotada mediante una API REST.\r\n\r\n    idCliente();\r\n    nombreCliente();//Añade el nombre del cliente al objeto de la cita.\r\n    seleccionarFecha();//Añade la fecha de la cita en el objeto.\r\n    seleccionarHora();//Añade la hora de la cita en el objeto.\r\n\r\n    mostrarResumen();//Muestra resumen de la cita\r\n\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    // Se oculta la sección que tiene previamente la clase de .mostrar\r\n    const seccionAnterior=document.querySelector('.mostrar');\r\n    if(seccionAnterior){\r\n        seccionAnterior.classList.remove('mostrar');\r\n\r\n    }\r\n \r\n   const seccion= document.querySelector(`#paso-${paso}`); //Obtiene la sección que hay sido seleccionada en los tabs o la cargada por default paso=1\r\n   seccion.classList.add('mostrar'); //Añade clase que aplica un display block, al bloque que antes tenia un display:none\r\n\r\n    //Quitar la clase .actual al tab anterior\r\n    const tabAnterior=document.querySelector('.actual');\r\n    if(tabAnterior){\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n\r\n   //Resalta el tab actual\r\n    const tab=document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    tab.classList.add('actual');\r\n\r\n}\r\n\r\nfunction tabs() {\r\n    const botones=document.querySelectorAll('.tabs button');\r\n    botones.forEach(boton=>{\r\n        boton.addEventListener('click',function(e){\r\n            paso= parseInt(e.target.dataset.paso);   //Obtiene al valor asignado al atributo personalizado data-paso y lo convierte a entero. \r\n            mostrarSeccion(); //Se manda llamar /de nueva cuenta por que es necesario actuali<ar el valor de la variable paso, para efectuar los correspondientes cambios de sección\r\n            botonesPaginador();\r\n           \r\n        })\r\n    \r\n    })\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const paginaAnterior=document.querySelector('#anterior');\r\n    const paginaSiguiente=document.querySelector('#siguiente');\r\n\r\n    if(paso===1){\r\n        paginaAnterior.classList.add('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar')\r\n    }else if(paso===3){\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.add('ocultar');\r\n        mostrarResumen();\r\n    }else{\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    }\r\n\r\n    mostrarSeccion(); //Para que se vincule con las funciones de páginaAnterior y paginaSiguiente, de manera que está a su vez va ser responsiva al evento click de ambas.\r\n\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const paginaAnterior=document.querySelector('#anterior');\r\n\r\n    paginaAnterior.addEventListener('click',function () {\r\n\r\n        if(paso <= pasoInicial) return;\r\n        paso--;\r\n        \r\n\r\n        botonesPaginador(); //Para hacer que se muestre los botones pertinentes en base al valor del paso dado por esta función\r\n    })\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente=document.querySelector('#siguiente');\r\n\r\n    paginaSiguiente.addEventListener('click',function () {\r\n\r\n        if(paso >= pasoFinal) return;\r\n        paso++;\r\n\r\n        botonesPaginador(); //Para hacer que se muestre los botones pertinentes en base al valor del paso dado por esta función\r\n    })\r\n}\r\n\r\nasync function consultarAPI(){\r\n    try {\r\n        const url='http://localhost:3000/api/servicios';\r\n        resultado= await fetch(url); //Obtiene objeto con multiples objetos y métodos referente al estado de la conexión\r\n        servicios= await resultado.json(); //Convierte el String Json, en un objeto manipulable en JavaScript\r\n        mostrarServicios(servicios)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n    servicios.forEach(servicio=>{\r\n\r\n        const {id, nombre, precio}=servicio;\r\n\r\n        //Se crea parrafo con el nombre del servicio\r\n        const nombreServicio=document.createElement('p');\r\n        nombreServicio.classList.add('nombre-servicio');\r\n        nombreServicio.textContent=nombre;\r\n\r\n        //Se crea parrafo con el precio del servicio\r\n        const precioServicio=document.createElement('p');\r\n        precioServicio.classList.add('precio-servicio');\r\n        precioServicio.textContent=`$${precio}`;\r\n\r\n        //Se crea el contenedor para cada servicio\r\n        const servicioDiv=document.createElement('DIV');\r\n        servicioDiv.classList.add('servicio');\r\n        servicioDiv.dataset.idServicio=id;\r\n\r\n        //Se agrupan los precios y nombres en sus contenedores\r\n        servicioDiv.appendChild(nombreServicio);\r\n        servicioDiv.appendChild(precioServicio);\r\n\r\n        //Se añade evento de click para seleccionar los servicios\r\n        servicioDiv.onclick=function () { //Con esta notación es necesario definir un callBack para llamar una funcion dentro de esta\r\n            seleccionarServicio(servicio);\r\n        }\r\n        \r\n\r\n        document.querySelector('#servicios').appendChild(servicioDiv);\r\n\r\n\r\n    });\r\n}\r\n\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    const {id}=servicio;\r\n    const {servicios}=cita;\r\n\r\n    \r\n    //Identificar elemento que se le da click\r\n    const divServicio=document.querySelector(`[data-id-servicio=\"${id}\"]`);\r\n\r\n    //Comprobar si un servicio ya fue agregado\r\n    if(servicios.some(agregado=> agregado.id===id)){\r\n        //Eliminarlo\r\n        cita.servicios=servicios.filter(agregado=>agregado.id!==id);\r\n\r\n        divServicio.classList.remove('seleccionado');\r\n    }else{\r\n        //Agregarlo\r\n\r\n        cita.servicios=[...servicios,servicio];\r\n\r\n        divServicio.classList.add('seleccionado');\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nfunction idCliente() {\r\n    cita.id=document.querySelector('#id').value;\r\n}\r\nfunction nombreCliente(){\r\n     cita.nombre=document.querySelector('#nombre').value;\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n    const inputFecha=document.querySelector('#fecha');\r\n    inputFecha.addEventListener('input',function (e){\r\n        const dia=new Date(e.target.value).getUTCDay(); //Obtiene dia de la semana en función de la fecha ingresada en el input( formato 0= domingo, 1=lunes, etc..)\r\n        if([6,0].includes(dia)){\r\n            e.target.value=''; //Evita que el usuario almacene la fecha de los dias sabados y domingos(6,0)\r\n            mostrarAlerta('Fines de semana no permitidos','error','.formulario');\r\n        }else{\r\n            cita.fecha=e.target.value;\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n    const inputHora=document.querySelector('#hora');\r\n    inputHora.addEventListener('input',function(e){\r\n        const horaCita=e.target.value;\r\n        const hora=horaCita.split(\":\")[0];\r\n\r\n        if(hora<10 || hora>18){\r\n            e.target.value='';\r\n            mostrarAlerta('Hora no Válida','error','.formulario');\r\n        }else{\r\n            cita.hora=e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction mostrarAlerta(mensaje,tipo,elemento,desaparece=true){\r\n\r\n    //Previene que se genere más de 1 alerta\r\n    const alertaPrevia=document.querySelector('.alerta');\r\n    if(alertaPrevia){\r\n        alertaPrevia.remove();\r\n    }\r\n\r\n\r\n    //Scripting para crear una alerta\r\n    const alerta=document.createElement('DIV');\r\n    alerta.textContent=mensaje;\r\n    alerta.classList.add('alerta');\r\n    alerta.classList.add(tipo);\r\n\r\n    const referencia=document.querySelector(elemento);\r\n    referencia.appendChild(alerta);\r\n\r\n    //Eliminar alerta\r\n    if(desaparece){\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 3000);\r\n    }\r\n\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    const resumen=document.querySelector('.contenido-resumen');\r\n\r\n    //Limpiar contenido del resumen\r\n    while (resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    if(Object.values(cita).includes('') || cita.servicios.length===0){  \r\n        mostrarAlerta('Faltan datos de servicios,Fecha u Hora','error','.contenido-resumen',false);\r\n        return;\r\n    }\r\n\r\n    const {nombre, fecha, hora, servicios}=cita;\r\n\r\n    //Heading para servicios en resumen\r\n    const headingServicios=document.createElement('H3');\r\n    headingServicios.textContent='Resumen de Servicios';\r\n    resumen.appendChild(headingServicios);\r\n\r\n\r\n    //Iterando y mostrando los servicios\r\n    servicios.forEach(servicio=>{\r\n        const {id,precio,nombre}=servicio;\r\n        const contenedorServicio=document.createElement('DIV');\r\n        contenedorServicio.classList.add('contenedor-servicio');\r\n\r\n        const textoServicio=document.createElement('P');\r\n        textoServicio.textContent=nombre;\r\n\r\n        const precioServicio=document.createElement('P');\r\n        precioServicio.innerHTML=`<span>Precio:</span> $${precio}`;\r\n\r\n        contenedorServicio.appendChild(textoServicio);\r\n        contenedorServicio.appendChild(precioServicio);\r\n\r\n        \r\n        resumen.appendChild(contenedorServicio);\r\n    });\r\n\r\n    //Heading para cita en resumen\r\n    const headingCita=document.createElement('H3');\r\n    headingCita.textContent='Resumen de Cita';\r\n    resumen.appendChild(headingCita);\r\n\r\n    \r\n    const nombreCliente=document.createElement('P');\r\n    nombreCliente.innerHTML=`<span>Nombre:</span> ${nombre}`;\r\n\r\n    //-----------Formatear la fecha en español-----------\r\n    const fechaObj=new Date(fecha);\r\n    \r\n    const mes=fechaObj.getMonth();\r\n    const dia=fechaObj.getDate() +2; //Dado a que al instancia el objeto Date se tiene un desfase de un día dado a que es un arreglo que empieza en 0.\r\n    const year=fechaObj.getFullYear();\r\n\r\n    const fechaUTC=new Date(Date.UTC(year,mes,dia)); //Fecha en formato UNIX (segunda instanciación del objeto date())\r\n\r\n    const opciones={weekday:'long',year:'numeric',month:'long',day:'numeric'};\r\n    const fechaFormateada=fechaUTC.toLocaleDateString('es-MX',opciones); //Este método solo es aplicable en fecha en formato UNIX\r\n\r\n    const fechaCliente=document.createElement('P');\r\n    fechaCliente.innerHTML=`<span>Fecha:</span> ${fechaFormateada}`;\r\n\r\n    const horaCliente=document.createElement('P');\r\n    horaCliente.innerHTML=`<span>Hora:</span> ${hora} Horas`;\r\n\r\n    //Botón para crear una cita\r\n    const botonReservar=document.createElement('BUTTON');\r\n    botonReservar.classList.add('boton');\r\n    botonReservar.textContent=\"Reservar cita\";\r\n    botonReservar.onclick=reservarCita;\r\n\r\n    resumen.appendChild(nombreCliente);\r\n    resumen.appendChild(fechaCliente);\r\n    resumen.appendChild(horaCliente);\r\n\r\n    resumen.appendChild(botonReservar);\r\n\r\n\r\n\r\n}\r\n\r\nasync function reservarCita() {\r\n    const datos=new FormData(); //Objeto que permitirá enviar datos a la API previamente creada.\r\n\r\n    const {id,nombre,fecha,hora,servicios}=cita;\r\n\r\n    const idServicios= servicios.map(servicios=>servicios.id)\r\n\r\n    datos.append('usuarioId',id); //\"append(llave:valor)\"\r\n    datos.append('fecha',fecha); //\"append(llave:valor)\"\r\n    datos.append('hora',hora); //\"append(llave:valor)\"\r\n    datos.append('servicios',idServicios); //\"append(llave:valor)\" solo se mandan las llaves de los servicios, puesto que están son las que se inserta en la tabla pivote citaServicios de la BD\r\n\r\n    \r\n    try {\r\n          \r\n        //Petición hacia la API\r\n        const url=\"http://localhost:3000/api/citas\";\r\n\r\n        const respuesta=await fetch(url,{\r\n            method:\"POST\",\r\n            body:datos\r\n        });\r\n\r\n        const resultado=await respuesta.json();\r\n           \r\n    \r\n        if(resultado.resultado) {//Dado que la operación de guardar() de activeRecord retorna un arreglo asociativo con [resultado y id , que se convierte a un objeto JSON, \r\n            Swal.fire({\r\n            icon: 'success',\r\n            title: 'Cita Creada',\r\n            text: 'Tu cita fue creada correctamente',\r\n            button:'Ok'\r\n          }).then(()=>{\r\n            setTimeout(() => {\r\n                window.location.reload()});\r\n            }, 3000);\r\n            \r\n        }\r\n        //console.log([...datos]); Forma de corroborar los datos que serán enviados a la API\r\n    } catch (error) {\r\n        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Hubo un error al guardar la cita',\r\n            \r\n          })\r\n    }\r\n\r\n}"]}